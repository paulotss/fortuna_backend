// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cashier {
  id      Int       @id @default(autoincrement())
  title   String    @db.VarChar(255)
  invoice Invoice[]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  code      String    @db.VarChar(45)
  password  String    @db.VarChar(45)
  cellPhone String    @db.VarChar(45)
  email     String    @db.VarChar(45)
  branch    Branch    @relation(fields: [branchId], references: [id])
  branchId  Int
  level     Level     @relation(fields: [levelId], references: [id])
  levelId   Int
  Client    Client[]
  Manager   Manager[]
  Seller    Seller[]
}

model Branch {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
  user  User[]
}

model Level {
  id      Int    @id @default(autoincrement())
  title   String @db.VarChar(255)
  acronym String @db.VarChar(10)
  user    User[]
}

model Expense {
  id         Int      @id @default(autoincrement())
  amount     Int
  value      Decimal  @db.Decimal(10, 2)
  launchDate DateTime
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
}

model Loss {
  id          Int      @id @default(autoincrement())
  amount      Int
  description String   @db.VarChar(255)
  createAt    DateTime
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}

model Product {
  id      Int                @id @default(autoincrement())
  title   String             @db.VarChar(255)
  price   Decimal            @db.Decimal(10, 2)
  amount  Int
  barCode String             @db.VarChar(45)
  invoice InvoiceToProduct[]
  Expense Expense[]
  Loss    Loss[]
}

model Client {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  cpf       String    @db.VarChar(11)
  balance   Decimal   @db.Decimal(10, 2)
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  invoice   Invoice[]
}

model Manager {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Seller {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  invoice   Invoice[]
}

model Invoice {
  id        Int                @id @default(autoincrement())
  value     Decimal            @db.Decimal(10, 2)
  saleDate  DateTime
  cashier   Cashier            @relation(fields: [cashierId], references: [id])
  cashierId Int
  seller    Seller             @relation(fields: [sellerId], references: [id])
  sellerId  Int
  client    Client             @relation(fields: [clientId], references: [id])
  clientId  Int
  products  InvoiceToProduct[]
}

model InvoiceToProduct {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId Int
  value     Decimal @db.Decimal(10, 2)
  amount    Int

  @@id([productId, invoiceId])
}
