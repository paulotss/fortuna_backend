// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cashier {
  id       Int                   @id @default(autoincrement())
  title    String                @db.VarChar(255)
  users    UserHasRole[]
  invoice  Invoice[]
  products ProducstHasCashiers[]
}

model User {
  id        Int           @id @default(autoincrement())
  name      String        @db.VarChar(255)
  password  String        @db.VarChar(45)
  cellPhone String        @db.VarChar(45)
  email     String        @unique @db.VarChar(45)
  admin     Boolean
  branch    Branch        @relation(fields: [branchId], references: [id])
  branchId  Int
  level     Level         @relation(fields: [levelId], references: [id])
  levelId   Int
  invoice   Invoice[]
  roles     UserHasRole[]
  client    Client[]
}

model Role {
  id    Int           @id @default(autoincrement())
  title String        @db.VarChar(255)
  users UserHasRole[]
}

model UserHasRole {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  role      Role    @relation(fields: [roleId], references: [id])
  roleId    Int
  cashier   Cashier @relation(fields: [cashierId], references: [id])
  cashierId Int

  @@id([userId, roleId, cashierId])
}

model Branch {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
  user  User[]
}

model Level {
  id      Int    @id @default(autoincrement())
  title   String @db.VarChar(255)
  acronym String @db.VarChar(10)
  user    User[]
}

model Expense {
  id         Int      @id @default(autoincrement())
  amount     Int
  value      Decimal  @db.Decimal(10, 2)
  launchDate DateTime
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
}

model Loss {
  id          Int      @id @default(autoincrement())
  amount      Int
  description String   @db.VarChar(255)
  createAt    DateTime
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
}

model Product {
  id          Int                   @id @default(autoincrement())
  title       String                @db.VarChar(255)
  description String                @db.Text()
  price       Decimal               @db.Decimal(10, 2)
  barCode     String                @db.VarChar(45)
  supplier    Supplier              @relation(fields: [supplierId], references: [id])
  supplierId  Int
  invoice     InvoiceToProduct[]
  expense     Expense[]
  loss        Loss[]
  cashiers    ProducstHasCashiers[]
}

model ProducstHasCashiers {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  cashier   Cashier @relation(fields: [cashierId], references: [id])
  cashierId Int
  amount    Int

  @@id([productId, cashierId])
}

model Supplier {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  products Product[]
}

model Client {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  balance   Decimal    @db.Decimal(10, 2)
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  invoice   Invoice[]
  receipts  Receipts[]
}

model Receipts {
  id        Int      @id @default(autoincrement())
  amount    Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int
  method    Method   @relation(fields: [methodId], references: [id])
  methodId  Int
}

model Method {
  id       Int        @id @default(autoincrement())
  title    String     @db.VarChar(45)
  receipts Receipts[]
}

model Invoice {
  id        Int                @id @default(autoincrement())
  value     Decimal            @db.Decimal(10, 2)
  saleDate  DateTime
  cashier   Cashier            @relation(fields: [cashierId], references: [id])
  cashierId Int
  seller    User               @relation(fields: [sellerId], references: [id])
  sellerId  Int
  client    Client             @relation(fields: [clientId], references: [id])
  clientId  Int
  products  InvoiceToProduct[]
}

model InvoiceToProduct {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId Int
  value     Decimal @db.Decimal(10, 2)
  amount    Int

  @@id([productId, invoiceId])
}
